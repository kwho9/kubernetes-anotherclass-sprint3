apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: anotherclass-322
  name: portal-3222
  labels:
    part-of: k8s-anotherclass
    component: frontend-server
    name: portal
    instance: portal-3222
    version: 3.0.0
    managed-by: kubectl
spec:
  selector:
    matchLabels:
      part-of: k8s-anotherclass
      component: frontend-server
      name: portal
      instance: portal-3222
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        part-of: k8s-anotherclass
        component: frontend-server
        name: portal
        instance: portal-3222
        version: 3.0.0
    spec:
      containers:
        - name: portal-3222
          # 1pro는 본인의 dockerhub username으로 변경해 주세요.
          image: gwanghog142/api-tester:3.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          envFrom:
            - configMapRef:
                name: api-tester-3222-properties
          startupProbe:
            httpGet:
              path: "/startup"
              port: 8080
            periodSeconds: 5
            failureThreshold: 24
          readinessProbe:
            httpGet:
              path: "/readiness"
              port: 8080
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: "/liveness"
              port: 8080
            periodSeconds: 10
            failureThreshold: 3
          volumeMounts:
            - name: secret-datasource
              mountPath: /usr/src/myapp/datasource
      volumes:
        - name: secret-datasource
          secret:
            secretName: api-tester-3222-postgresql